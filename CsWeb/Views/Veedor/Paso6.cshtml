@model CapaDominio.EntidadesNegocio.Pasos6
@using System.Globalization
@using CapaServicios.Servicios

<div class="banner1">
    <img src="~/Content/img/Riav/Paso6.jpg" />
</div>
@using (Html.BeginForm("Paso6", "Veedor", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.PasosId)
    @Html.HiddenFor(model => model.NombreObjeto)

    <div>
        <ul class="steps">
            <li data-step="1" class="active">
                <a href="@Url.Action("Paso1",  new {id = @Model.PasosId})">
                    <span class="step">1</span>
                </a>
            </li>
            <li data-step="2" class="active">
                <a href="@Url.Action("Paso2",  new {id = @Model.PasosId})">
                    <span class="step">2</span>
                </a>
            </li>
            <li data-step="3" class="active">
                <a href="@Url.Action("Paso3",  new {id = @Model.PasosId})">
                    <span class="step">3</span>
                </a>
            </li>
            <li data-step="4" class="active">
                <a href="@Url.Action("Paso4",  new {id = @Model.PasosId})">
                    <span class="step">4</span>
                </a>
            </li>
            <li data-step="5" class="active">
                <a href="@Url.Action("Paso5",  new {id = @Model.PasosId})">
                    <span class="step">5</span>
                </a>
            </li>
            <li data-step="6" class="active">
                <a href="@Url.Action("Paso6",  new {id = @Model.PasosId})">
                    <span class="step">6</span>
                </a>
            </li>
            <li data-step="7">
                <a href="@Url.Action("Paso7",  new {id = @Model.PasosId})">
                    <span class="step">7</span>
                </a>
            </li>
            <li data-step="8">
                <a href="@Url.Action("Paso8",  new {id = @Model.PasosId})">
                    <span class="step">8</span>
                </a>
            </li>
            <li data-step="9">
                <a href="@Url.Action("Paso9",  new {id = @Model.PasosId})">
                    <span class="step">9</span>
                </a>
            </li>

        </ul>
    </div>
    <br /><p>En este paso el veedor debe recolectar, organizar y analizar la información asociada a la implementación del proyecto, esta información debe dar cuenta de cómo la entidad pública responsable esta implementado el plan, programa o proyecto en el territorio particular, esta información puede venir de fuentes institucionales, no institucionales y directas.</p>
    <div class="form-vertical">

        @*<div class="col-lg-12 form-group">*@
        <div class="panel panel-default">
            <div class="panel-heading">
                <h4> @Model.NombreObjeto</h4>
            </div>
            <div class="panel-body">
                <div class="col-md-12">
                    <a href="#" title="Es el momento en que el grupo define qué tipo de información necesita e identifica donde la puede conseguir ">
                        @Html.LabelFor(model => model.InformacionRequerida)
                    </a>
                    @Html.EditorFor(model => model.InformacionRequerida, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.InformacionRequerida, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-12">
                    <a href="#" title="Son los lugares donde se puede encontrar la información de interés, este puede venir de fuentes institucionales de las entidades públicas relacionadas con la implementación, de fuentes no institucionales, grupos de investigación que hayan estudiado el tema principal de interés y fuentes directas que es la información que se recolecta directamente con los afectados o grupos a los va dirigida la implementación a través de encuestas, entrevistas entre otros.">
                        @Html.LabelFor(model => model.FuenteInformacion)
                    </a>
                    @Html.EditorFor(model => model.FuenteInformacion, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FuenteInformacion, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-12">
                    <a href="#" title="Para la solicitud de información existen los siguientes mecanismos: las cartas de solicitud formal, los derechos de petición, la participación en audiencias públicas y en la página web de las entidades públicas">
                        @Html.LabelFor(model => model.MecanismoAccesoInformacion)
                    </a>
                    @Html.EditorFor(model => model.MecanismoAccesoInformacion, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MecanismoAccesoInformacion, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-12">
                    <a href="#" title="Es el conjunto en el que se organiza la información encontrada lo cual puede ser a través del tipo de fuente, temáticas de interés o categorías de análisis, entre otros.">
                        @Html.LabelFor(model => model.GrupoInformacion)
                    </a>
                    @Html.EditorFor(model => model.GrupoInformacion, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.GrupoInformacion, "", new { @class = "text-danger" })
                </div>
                <div class="row">
                    <div class="col-sm-12">
                        <a href="@Url.Action("ProyectosVeedor")" class="btn btn-success btn-sm">@(ArchivoDeRecursos.BotonRegresar)</a>
                        <a href="#" id="btn" class="btn btn-success btn-sm"><span aria-hidden="true"></span>Agregar requerimiento de información</a>
                        <button class="btn btn-success btn-sm" type="submit">@(ArchivoDeRecursos.BotonGuardar)</button>
                        <a href="@Url.Action("Exp",new { id = Model.PasosId, paso=6 })" class="btn btn-success btn-sm">Descargar reporte</a>
                        <a href="@Url.Action("Paso7", new { id = Model.PasosId })" class="btn btn-success btn-sm">Siguiente paso</a>
                        <a href="~/Content/Doc/PASOS6.pdf" class="btn btn-primary btn-sm" target="_blank">Ayuda</a>
                    </div>
                </div>
                <br /> <br />
                <div id="divGrid" style="margin: 0px 0px 0">
                    <table id="grid-table"></table>
                    <div id="grid-pager"></div>
                </div>
            </div>
        </div>
    </div>
    @*</div>*@
   
}
@section Scripts {
    <script type="text/javascript">

            //$('input, select, textarea').on("keypress", function () {
            //    $input = $(this);
            //    setTimeout(function () {
            //        $input.val($input.val().toUpperCase());
            //    }, 50);
            //});


            $('input, select, textarea').on('keydown', function (e) {
                var keyCode = e.keyCode || e.which;
                if (e.keyCode === 13) {
                    e.preventDefault();
                    // $('input, select, textarea')[$('input, select, textarea').index(this) + 1].focus();
                }
            });

              $("#btn").click(function (e) {
        e.preventDefault();
        agregarReg();
    });

        function agregarReg() {
            if ($('#InformacionRequerida').val() != "" && $('#FuenteInformacion').val() != "") {
                $.ajax({
                    url: '@Url.Action("CrearPaso6")',
                    type: 'POST',
                    dataType: 'json',
                    data: { PasosId: $('#PasosId').val(), InformacionRequerida: $('#InformacionRequerida').val(), FuenteInformacion: $('#FuenteInformacion').val(), MecanismoAccesoInformacion: $('#MecanismoAccesoInformacion').val(), GrupoInformacion: $('#GrupoInformacion').val() },
                    success: function (data) {
                        $('#grid-table').trigger('reloadGrid'); $('#InformacionRequerida').val(''); $('#FuenteInformacion').val(''); $('#MecanismoAccesoInformacion').val(''); $('#GrupoInformacion').val('');
                    },
                });
            }
    }
    </script>
}
@section GridSection {
    <script type="text/javascript">

           jQuery(function ($) {
                            var gridSelector = "#grid-table";
                            var pagerSelector = "#grid-pager";
                            //resize to fit page size
                            //$(window).on('resize.jqGrid', function () {
                            //    $(gridSelector).jqGrid('setGridWidth', $(".page-content").width());
                            //});

                            // esta instruccion para encajar en el panel y comentar las lineas de arriba.
                            $(window).resize(function () {
                                $targetGrid.setGridWidth($(gridSelector).parent().width()); //perhaps add padding calculation here?
                            });

               //$(window).on('resize.jqGrid', function () {
               //    $(gridSelector).jqGrid('setGridWidth', $(".page-content").width());
               //});
                            //resize on sidebar collapse/expand
                            var parentColumn = $(gridSelector).closest('[class*="col-"]');
                            $(document).on('settings.ace.jqGrid', function (ev, eventName) {
                                if (eventName === 'sidebar_collapsed' || eventName === 'main_container_fixed') {
                                    //setTimeout is for webkit only to give time for DOM changes and then redraw!!!
                                    setTimeout(function () {
                                        $(gridSelector).jqGrid('setGridWidth', parentColumn.width());
                                    }, 0);
                                }
                            });
                            //replace icons with FontAwesome icons like above
                            function updatePagerIcons() {
                                var replacement =
                                {
                                    'ui-icon-seek-first': 'ace-icon fa fa-angle-double-left bigger-140',
                                    'ui-icon-seek-prev': 'ace-icon fa fa-angle-left bigger-140',
                                    'ui-icon-seek-next': 'ace-icon fa fa-angle-right bigger-140',
                                    'ui-icon-seek-end': 'ace-icon fa fa-angle-double-right bigger-140'
                                };
                                var temp = '.ui-pg-table:not(.navtable) > tbody > tr > .ui-pg-button > .ui-icon';
                                $(temp).each(function () {
                                    var icon = $(this);
                                    var $class = $.trim(icon.attr('class').replace('ui-icon', ''));
                                    if ($class in replacement) icon.attr('class', 'ui-icon ' + replacement[$class]);
                                });
                            }

                            function enableTooltips(table) {
                                $('.navtable .ui-pg-button').tooltip({ container: 'body' });
                                $(table).find('.ui-pg-div').tooltip({ container: 'body' });
                            }

                            $(document).one('ajaxloadstart.page', function () {
                                $(gridSelector).jqGrid('GridUnload');
                                $('.ui-jqdialog').remove();
                            });

     function formatUrl(cellValue) {

                return "<a href='@Url.Action("Paso6")/" + cellValue+ "'><u>Ver</u></a>";
            }

            jQuery(gridSelector).jqGrid({
                height: '100%',
                 url: '@Url.Action("ObtenerPaso6", new { id = Model.PasosId })',
                mtype: 'POST',
                datatype: "json",
                colNames: ['', 'Requerimiento', 'Fuente', 'Mecanismos', 'Grupo'],
                colModel: [
                   { name: 'Pasos6Id', width: 1  },
                    { name: 'InformacionRequerida', width: 230, align: "center",sortable: true },
                    { name: 'FuenteInformacion', width: 230, sortable: true },
                    { name: 'MecanismoAccesoInformacion', width: 230, sortable: true },
                    { name: 'GrupoInformacion', width: 230, sortable: true },
                ],
                viewrecords: true,
                rowNum: 10,
                rowList: [10, 20, 50, 100, 500],
                pager: pagerSelector,
                altRows: true,
                loadComplete: function () {
                    var table = this;
                    setTimeout(function () {
                        updatePagerIcons(table);
                        enableTooltips(table);
                    }, 0);
                }
            });
            $(window).triggerHandler('resize.jqGrid');//trigger window resize to make the grid get the correct size
        });

    </script>
}


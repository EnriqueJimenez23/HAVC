@model CapaDominio.EntidadesNegocio.Pasos4
@using System.Globalization
@using CapaServicios.Servicios

<div class="banner1">
    <img src="~/Content/img/Riav/Paso4.jpg" />
</div>
<div>
    <ul class="steps">
        <li data-step="1" class="active">
            <a href="@Url.Action("Paso1",  new {id = @Model.PasosId})">
                <span class="step">1</span>
            </a>
        </li>
        <li data-step="2" class="active">
            <a href="@Url.Action("Paso2",  new {id = @Model.PasosId})">
                <span class="step">2</span>
            </a>
        </li>
        <li data-step="3" class="active">
            <a href="@Url.Action("Paso3",  new {id = @Model.PasosId})">
                <span class="step">3</span>
            </a>
        </li>
        <li data-step="4" class="active">
            <a href="@Url.Action("Paso4",  new {id = @Model.PasosId})">
                <span class="step">4</span>
            </a>
        </li>
        <li data-step="5">
            <a href="@Url.Action("Paso5",  new {id = @Model.PasosId})">
                <span class="step">5</span>
            </a>
        </li>
        <li data-step="6">
            <a href="@Url.Action("Paso6",  new {id = @Model.PasosId})">
                <span class="step">6</span>
            </a>
        </li>
        <li data-step="7">
            <a href="@Url.Action("Paso7",  new {id = @Model.PasosId})">
                <span class="step">7</span>
            </a>
        </li>
        <li data-step="8">
            <a href="@Url.Action("Paso8",  new {id = @Model.PasosId})">
                <span class="step">8</span>
            </a>
        </li>
        <li data-step="9">
            <a href="@Url.Action("Paso9",  new {id = @Model.PasosId})">
                <span class="step">9</span>
            </a>
        </li>

    </ul>
</div>
<p>En este paso el grupo que conformó la veeduría ciudadana debe reunirse para definir y construir un plan de trabajo que contemple, actividades, tiempos, responsables y recursos.</p>
@using (Html.BeginForm("Paso4", "Veedor", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Pasos4Id)
    @Html.HiddenFor(model => model.PasosId)
    @Html.HiddenFor(model => model.NombreObjeto)


    <div class="form-vertical">

        @*<div class="col-lg-12 form-group">*@
        <div class="panel panel-default">
            <div class="panel-heading">
                <h4> @Model.NombreObjeto</h4>
            </div>
            <div class="panel-body">
                <div class="row">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.PasoCronograma)
                        @Html.DropDownListFor(model => model.PasoCronograma, (IEnumerable<SelectListItem>)ViewBag.ListaCronograma, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.PasoCronograma, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-6">
                        @Html.Label("Cual otra acción o actividad?")
                        @Html.EditorFor(model => model.Otra, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PasoCronograma, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <a href="#" title="Son las acciones, tareas o actividades que va a llevar a cabo la veeduría para hacer el ejercicio de seguimiento">
                            @Html.LabelFor(model => model.QueHacer)
                        </a>
                        @Html.EditorFor(model => model.QueHacer, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.QueHacer, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <a href="#" title="Son las personas que se asignan dentro del grupo de veeduría, para llevar a cabo una acción, tarea o actividad en particular">
                            @Html.LabelFor(model => model.Responsables)
                        </a>
                        @Html.EditorFor(model => model.Responsables, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Responsables, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <a href="#" title="Son los medios que necesita el grupo de veeduría para llevar a cabo las actividades de seguimiento y vigilancia">
                            @Html.LabelFor(model => model.Recursos)
                        </a>
                        @Html.EditorFor(model => model.Recursos, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Recursos, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <a href="#" title="Son las fechas definidas para llevar a cabo cada actividad, estas deben contemplar las fechas de inicio y de fin de la implementación del plan, programa o proyecto">
                            @Html.LabelFor(model => model.Fecha)
                        </a>
                        @*@Html.EditorFor(model=>
                            model.Fecha, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.TextBoxFor(model => model.Fecha, null, htmlAttributes: new { @class = "form-control", type = "date" })
                        @Html.ValidationMessageFor(model => model.Fecha, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row">

                    <div class="col-sm-12">
                        <br /> <br />
                        <a href="@Url.Action("ProyectosVeedor")" class="btn btn-success btn-sm">@(ArchivoDeRecursos.BotonRegresar)</a>
                        <a href="#" id="btn" class="btn btn-success btn-sm"><span aria-hidden="true"></span>Agregar actividad</a>
                        <button class="btn btn-success btn-sm" type="submit">@(ArchivoDeRecursos.BotonGuardar)</button>
                        <a href="@Url.Action("Exp",new { id = Model.PasosId, paso=4 })" class="btn btn-success btn-sm">Descargar reporte</a>
                        <a href="@Url.Action("Paso5", new { id = Model.PasosId })" class="btn btn-success btn-sm">Siguiente paso</a>
                        <a href="~/Content/Doc/PASOS4.pdf" class="btn btn-primary btn-sm" target="_blank">Ayuda</a>
                    </div>
                </div>

                <div id="divGrid" style="margin: 0px 0px 0">
                    <table id="grid-table"></table>
                    <div id="grid-pager"></div>
                </div>
            </div>


        </div>
    </div>
   
    @*</div>*@
}
@section Scripts {
    <script type="text/javascript">

        $('input, select, textarea').on("keypress", function () {
            $input = $(this);
            setTimeout(function () {
                $input.val($input.val().toUpperCase());
            }, 50);
        });


        $('input, select, textarea').on('keydown', function (e) {
            var keyCode = e.keyCode || e.which;
            if (e.keyCode === 13) {
                e.preventDefault();
                // $('input, select, textarea')[$('input, select, textarea').index(this) + 1].focus();
            }
        });
         $("#btn").click(function (e) {
        e.preventDefault();
        agregarReg();
    });

        function agregarReg() {
            if ($('#PasoCronograma').val() != 0 || $('#Otra').val() != "" ) {

        $.ajax({
            url: '@Url.Action("CrearPaso4")',
            type: 'POST',
            dataType: 'json',
            data: { PasosId: $('#PasosId').val(), PasoCronograma: $('#PasoCronograma').val(), QueHacer: $('#QueHacer').val(), Responsables: $('#Responsables').val(), Recursos: $('#Recursos').val(), Fecha: $('#Fecha').val(), Otra:$('#Otra').val()},
            success: function (data) {
                $('#grid-table').trigger('reloadGrid'); $('#PasoCronograma').val(''); $('#QueHacer').val(''); $('#Responsables').val(''); $('#Recursos').val(''); $('#Otra').val(''); $('#Fecha').val('');

            },
        });
            }
    }

    </script>
}

@section GridSection {

    <script type="text/javascript">

           jQuery(function ($) {
                            var gridSelector = "#grid-table";
                            var pagerSelector = "#grid-pager";
                            //resize to fit page size
                            //$(window).on('resize.jqGrid', function () {
                            //    $(gridSelector).jqGrid('setGridWidth', $(".page-content").width());
                            //});

                            // esta instruccion para encajar en el panel y comentar las lineas de arriba.
                            $(window).resize(function () {
                                $targetGrid.setGridWidth($(gridSelector).parent().width()); //perhaps add padding calculation here?
                            });
                            //resize on sidebar collapse/expand
                            var parentColumn = $(gridSelector).closest('[class*="col-"]');
                            $(document).on('settings.ace.jqGrid', function (ev, eventName) {
                                if (eventName === 'sidebar_collapsed' || eventName === 'main_container_fixed') {
                                    //setTimeout is for webkit only to give time for DOM changes and then redraw!!!
                                    setTimeout(function () {
                                        $(gridSelector).jqGrid('setGridWidth', parentColumn.width());
                                    }, 0);
                                }
                            });
                            //replace icons with FontAwesome icons like above
                            function updatePagerIcons() {
                                var replacement =
                                {
                                    'ui-icon-seek-first': 'ace-icon fa fa-angle-double-left bigger-140',
                                    'ui-icon-seek-prev': 'ace-icon fa fa-angle-left bigger-140',
                                    'ui-icon-seek-next': 'ace-icon fa fa-angle-right bigger-140',
                                    'ui-icon-seek-end': 'ace-icon fa fa-angle-double-right bigger-140'
                                };
                                var temp = '.ui-pg-table:not(.navtable) > tbody > tr > .ui-pg-button > .ui-icon';
                                $(temp).each(function () {
                                    var icon = $(this);
                                    var $class = $.trim(icon.attr('class').replace('ui-icon', ''));
                                    if ($class in replacement) icon.attr('class', 'ui-icon ' + replacement[$class]);
                                });
                            }

                            function enableTooltips(table) {
                                $('.navtable .ui-pg-button').tooltip({ container: 'body' });
                                $(table).find('.ui-pg-div').tooltip({ container: 'body' });
                            }

                            $(document).one('ajaxloadstart.page', function () {
                                $(gridSelector).jqGrid('GridUnload');
                                $('.ui-jqdialog').remove();
                            });

     function formatUrl(cellValue) {

               // return "<a href='@Url.Action("Paso4")/" + cellValue+ "?nuevo=false'><u>Ver</u></a>";
            }

            jQuery(gridSelector).jqGrid({
                height: '100%',
                 url: '@Url.Action("ObtenerPaso4", new { id = Model.PasosId })',
                mtype: 'POST',
                datatype: "json",
                colNames: ['', 'Actividad', 'Que hacer', 'Responsables', 'Recursos','Fecha'],
                colModel: [
                   { name: 'Id', width: 1, align: "center"},
                   { name: 'PasoCronograma', width: 150, align: "center",sortable: true },
                   { name: 'QueHacer', width: 200, sortable: true },
                   { name: 'Responsables', width: 200, sortable: true },
                   { name: 'Recursos', width: 200, sortable: true },
                   { name: 'Fecha', width: 100, sortable: true },
                ],
                viewrecords: true,
                rowNum: 10,
                rowList: [10, 20, 50, 100, 500],
                pager: pagerSelector,
                altRows: true,
                loadComplete: function () {
                    var table = this;
                    setTimeout(function () {
                        updatePagerIcons(table);
                        enableTooltips(table);
                    }, 0);
                }
            });
            $(window).triggerHandler('resize.jqGrid');//trigger window resize to make the grid get the correct size
        });

    </script>
}